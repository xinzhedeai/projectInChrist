<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mapper.BlogMapper">
  <resultMap id="BaseResultMap" type="po.Blog">
    <id column="BLOG_ID" jdbcType="VARCHAR" property="blogId" />
    <id column="US_ID" jdbcType="VARCHAR" property="usId" />
    <result column="SEND_TIME" jdbcType="TIMESTAMP" property="sendTime" />
    <result column="UPVOTE_NO" jdbcType="INTEGER" property="upvoteNo" />
    <result column="COMMENT_NO" jdbcType="INTEGER" property="commentNo" />
    <result column="COLLECT_NO" jdbcType="INTEGER" property="collectNo" />
    <result column="DELETE_YN" jdbcType="VARCHAR" property="deleteYn" />
    <result column="FORWARDING" jdbcType="VARCHAR" property="forwarding" />
    <result column="CONTENT" jdbcType="VARCHAR" property="content" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    BLOG_ID, US_ID, SEND_TIME, UPVOTE_NO, COMMENT_NO, COLLECT_NO, DELETE_YN, FORWARDING, 
    CONTENT
  </sql>
  <select id="selectByExample" parameterType="po.BlogExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from blog
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="map" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from blog
    where BLOG_ID = #{blogId,jdbcType=VARCHAR}
      and US_ID = #{usId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="map">
    delete from blog
    where BLOG_ID = #{blogId,jdbcType=VARCHAR}
      and US_ID = #{usId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="po.BlogExample">
    delete from blog
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="po.Blog">
    insert into blog (BLOG_ID, US_ID, SEND_TIME, 
      UPVOTE_NO, COMMENT_NO, COLLECT_NO, 
      DELETE_YN, FORWARDING, CONTENT
      )
    values (#{blogId,jdbcType=VARCHAR}, #{usId,jdbcType=VARCHAR}, #{sendTime,jdbcType=TIMESTAMP}, 
      #{upvoteNo,jdbcType=INTEGER}, #{commentNo,jdbcType=INTEGER}, #{collectNo,jdbcType=INTEGER}, 
      #{deleteYn,jdbcType=VARCHAR}, #{forwarding,jdbcType=VARCHAR}, #{content,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="po.Blog">
    insert into blog
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="blogId != null">
        BLOG_ID,
      </if>
      <if test="usId != null">
        US_ID,
      </if>
      <if test="sendTime != null">
        SEND_TIME,
      </if>
      <if test="upvoteNo != null">
        UPVOTE_NO,
      </if>
      <if test="commentNo != null">
        COMMENT_NO,
      </if>
      <if test="collectNo != null">
        COLLECT_NO,
      </if>
      <if test="deleteYn != null">
        DELETE_YN,
      </if>
      <if test="forwarding != null">
        FORWARDING,
      </if>
      <if test="content != null">
        CONTENT,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="blogId != null">
        #{blogId,jdbcType=VARCHAR},
      </if>
      <if test="usId != null">
        #{usId,jdbcType=VARCHAR},
      </if>
      <if test="sendTime != null">
        #{sendTime,jdbcType=TIMESTAMP},
      </if>
      <if test="upvoteNo != null">
        #{upvoteNo,jdbcType=INTEGER},
      </if>
      <if test="commentNo != null">
        #{commentNo,jdbcType=INTEGER},
      </if>
      <if test="collectNo != null">
        #{collectNo,jdbcType=INTEGER},
      </if>
      <if test="deleteYn != null">
        #{deleteYn,jdbcType=VARCHAR},
      </if>
      <if test="forwarding != null">
        #{forwarding,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        #{content,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="po.BlogExample" resultType="java.lang.Integer">
    select count(*) from blog
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update blog
    <set>
      <if test="record.blogId != null">
        BLOG_ID = #{record.blogId,jdbcType=VARCHAR},
      </if>
      <if test="record.usId != null">
        US_ID = #{record.usId,jdbcType=VARCHAR},
      </if>
      <if test="record.sendTime != null">
        SEND_TIME = #{record.sendTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.upvoteNo != null">
        UPVOTE_NO = #{record.upvoteNo,jdbcType=INTEGER},
      </if>
      <if test="record.commentNo != null">
        COMMENT_NO = #{record.commentNo,jdbcType=INTEGER},
      </if>
      <if test="record.collectNo != null">
        COLLECT_NO = #{record.collectNo,jdbcType=INTEGER},
      </if>
      <if test="record.deleteYn != null">
        DELETE_YN = #{record.deleteYn,jdbcType=VARCHAR},
      </if>
      <if test="record.forwarding != null">
        FORWARDING = #{record.forwarding,jdbcType=VARCHAR},
      </if>
      <if test="record.content != null">
        CONTENT = #{record.content,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update blog
    set BLOG_ID = #{record.blogId,jdbcType=VARCHAR},
      US_ID = #{record.usId,jdbcType=VARCHAR},
      SEND_TIME = #{record.sendTime,jdbcType=TIMESTAMP},
      UPVOTE_NO = #{record.upvoteNo,jdbcType=INTEGER},
      COMMENT_NO = #{record.commentNo,jdbcType=INTEGER},
      COLLECT_NO = #{record.collectNo,jdbcType=INTEGER},
      DELETE_YN = #{record.deleteYn,jdbcType=VARCHAR},
      FORWARDING = #{record.forwarding,jdbcType=VARCHAR},
      CONTENT = #{record.content,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="po.Blog">
    update blog
    <set>
      <if test="sendTime != null">
        SEND_TIME = #{sendTime,jdbcType=TIMESTAMP},
      </if>
      <if test="upvoteNo != null">
        UPVOTE_NO = #{upvoteNo,jdbcType=INTEGER},
      </if>
      <if test="commentNo != null">
        COMMENT_NO = #{commentNo,jdbcType=INTEGER},
      </if>
      <if test="collectNo != null">
        COLLECT_NO = #{collectNo,jdbcType=INTEGER},
      </if>
      <if test="deleteYn != null">
        DELETE_YN = #{deleteYn,jdbcType=VARCHAR},
      </if>
      <if test="forwarding != null">
        FORWARDING = #{forwarding,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        CONTENT = #{content,jdbcType=VARCHAR},
      </if>
    </set>
    where BLOG_ID = #{blogId,jdbcType=VARCHAR}
      and US_ID = #{usId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="po.Blog">
    update blog
    set SEND_TIME = #{sendTime,jdbcType=TIMESTAMP},
      UPVOTE_NO = #{upvoteNo,jdbcType=INTEGER},
      COMMENT_NO = #{commentNo,jdbcType=INTEGER},
      COLLECT_NO = #{collectNo,jdbcType=INTEGER},
      DELETE_YN = #{deleteYn,jdbcType=VARCHAR},
      FORWARDING = #{forwarding,jdbcType=VARCHAR},
      CONTENT = #{content,jdbcType=VARCHAR}
    where BLOG_ID = #{blogId,jdbcType=VARCHAR}
      and US_ID = #{usId,jdbcType=VARCHAR}
  </update>
  <resultMap id="BaseResultMap" type="po.Blog">
    <id column="BLOG_ID" jdbcType="VARCHAR" property="blogId" />
    <id column="US_ID" jdbcType="VARCHAR" property="usId" />
    <result column="SEND_TIME" jdbcType="TIMESTAMP" property="sendTime" />
    <result column="UPVOTE_NO" jdbcType="INTEGER" property="upvoteNo" />
    <result column="COMMENT_NO" jdbcType="INTEGER" property="commentNo" />
    <result column="COLLECT_NO" jdbcType="INTEGER" property="collectNo" />
    <result column="DELETE_YN" jdbcType="VARCHAR" property="deleteYn" />
    <result column="FORWARDING" jdbcType="VARCHAR" property="forwarding" />
    <result column="CONTENT" jdbcType="VARCHAR" property="content" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    BLOG_ID, US_ID, SEND_TIME, UPVOTE_NO, COMMENT_NO, COLLECT_NO, DELETE_YN, FORWARDING, 
    CONTENT
  </sql>
  <select id="selectByExample" parameterType="po.BlogExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from blog
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="map" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from blog
    where BLOG_ID = #{blogId,jdbcType=VARCHAR}
      and US_ID = #{usId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="map">
    delete from blog
    where BLOG_ID = #{blogId,jdbcType=VARCHAR}
      and US_ID = #{usId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="po.BlogExample">
    delete from blog
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="po.Blog">
    insert into blog (BLOG_ID, US_ID, SEND_TIME, 
      UPVOTE_NO, COMMENT_NO, COLLECT_NO, 
      DELETE_YN, FORWARDING, CONTENT
      )
    values (#{blogId,jdbcType=VARCHAR}, #{usId,jdbcType=VARCHAR}, #{sendTime,jdbcType=TIMESTAMP}, 
      #{upvoteNo,jdbcType=INTEGER}, #{commentNo,jdbcType=INTEGER}, #{collectNo,jdbcType=INTEGER}, 
      #{deleteYn,jdbcType=VARCHAR}, #{forwarding,jdbcType=VARCHAR}, #{content,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="po.Blog">
    insert into blog
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="blogId != null">
        BLOG_ID,
      </if>
      <if test="usId != null">
        US_ID,
      </if>
      <if test="sendTime != null">
        SEND_TIME,
      </if>
      <if test="upvoteNo != null">
        UPVOTE_NO,
      </if>
      <if test="commentNo != null">
        COMMENT_NO,
      </if>
      <if test="collectNo != null">
        COLLECT_NO,
      </if>
      <if test="deleteYn != null">
        DELETE_YN,
      </if>
      <if test="forwarding != null">
        FORWARDING,
      </if>
      <if test="content != null">
        CONTENT,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="blogId != null">
        #{blogId,jdbcType=VARCHAR},
      </if>
      <if test="usId != null">
        #{usId,jdbcType=VARCHAR},
      </if>
      <if test="sendTime != null">
        #{sendTime,jdbcType=TIMESTAMP},
      </if>
      <if test="upvoteNo != null">
        #{upvoteNo,jdbcType=INTEGER},
      </if>
      <if test="commentNo != null">
        #{commentNo,jdbcType=INTEGER},
      </if>
      <if test="collectNo != null">
        #{collectNo,jdbcType=INTEGER},
      </if>
      <if test="deleteYn != null">
        #{deleteYn,jdbcType=VARCHAR},
      </if>
      <if test="forwarding != null">
        #{forwarding,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        #{content,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="po.BlogExample" resultType="java.lang.Integer">
    select count(*) from blog
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update blog
    <set>
      <if test="record.blogId != null">
        BLOG_ID = #{record.blogId,jdbcType=VARCHAR},
      </if>
      <if test="record.usId != null">
        US_ID = #{record.usId,jdbcType=VARCHAR},
      </if>
      <if test="record.sendTime != null">
        SEND_TIME = #{record.sendTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.upvoteNo != null">
        UPVOTE_NO = #{record.upvoteNo,jdbcType=INTEGER},
      </if>
      <if test="record.commentNo != null">
        COMMENT_NO = #{record.commentNo,jdbcType=INTEGER},
      </if>
      <if test="record.collectNo != null">
        COLLECT_NO = #{record.collectNo,jdbcType=INTEGER},
      </if>
      <if test="record.deleteYn != null">
        DELETE_YN = #{record.deleteYn,jdbcType=VARCHAR},
      </if>
      <if test="record.forwarding != null">
        FORWARDING = #{record.forwarding,jdbcType=VARCHAR},
      </if>
      <if test="record.content != null">
        CONTENT = #{record.content,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update blog
    set BLOG_ID = #{record.blogId,jdbcType=VARCHAR},
      US_ID = #{record.usId,jdbcType=VARCHAR},
      SEND_TIME = #{record.sendTime,jdbcType=TIMESTAMP},
      UPVOTE_NO = #{record.upvoteNo,jdbcType=INTEGER},
      COMMENT_NO = #{record.commentNo,jdbcType=INTEGER},
      COLLECT_NO = #{record.collectNo,jdbcType=INTEGER},
      DELETE_YN = #{record.deleteYn,jdbcType=VARCHAR},
      FORWARDING = #{record.forwarding,jdbcType=VARCHAR},
      CONTENT = #{record.content,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="po.Blog">
    update blog
    <set>
      <if test="sendTime != null">
        SEND_TIME = #{sendTime,jdbcType=TIMESTAMP},
      </if>
      <if test="upvoteNo != null">
        UPVOTE_NO = #{upvoteNo,jdbcType=INTEGER},
      </if>
      <if test="commentNo != null">
        COMMENT_NO = #{commentNo,jdbcType=INTEGER},
      </if>
      <if test="collectNo != null">
        COLLECT_NO = #{collectNo,jdbcType=INTEGER},
      </if>
      <if test="deleteYn != null">
        DELETE_YN = #{deleteYn,jdbcType=VARCHAR},
      </if>
      <if test="forwarding != null">
        FORWARDING = #{forwarding,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        CONTENT = #{content,jdbcType=VARCHAR},
      </if>
    </set>
    where BLOG_ID = #{blogId,jdbcType=VARCHAR}
      and US_ID = #{usId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="po.Blog">
    update blog
    set SEND_TIME = #{sendTime,jdbcType=TIMESTAMP},
      UPVOTE_NO = #{upvoteNo,jdbcType=INTEGER},
      COMMENT_NO = #{commentNo,jdbcType=INTEGER},
      COLLECT_NO = #{collectNo,jdbcType=INTEGER},
      DELETE_YN = #{deleteYn,jdbcType=VARCHAR},
      FORWARDING = #{forwarding,jdbcType=VARCHAR},
      CONTENT = #{content,jdbcType=VARCHAR}
    where BLOG_ID = #{blogId,jdbcType=VARCHAR}
      and US_ID = #{usId,jdbcType=VARCHAR}
  </update>
  <resultMap id="BaseResultMap" type="model.Blog">
    <id column="BLOG_ID" jdbcType="VARCHAR" property="blogId" />
    <id column="US_ID" jdbcType="VARCHAR" property="usId" />
    <result column="SEND_TIME" jdbcType="TIMESTAMP" property="sendTime" />
    <result column="UPVOTE_NO" jdbcType="INTEGER" property="upvoteNo" />
    <result column="COMMENT_NO" jdbcType="INTEGER" property="commentNo" />
    <result column="COLLECT_NO" jdbcType="INTEGER" property="collectNo" />
    <result column="DELETE_YN" jdbcType="VARCHAR" property="deleteYn" />
    <result column="FORWARDING" jdbcType="VARCHAR" property="forwarding" />
    <result column="CONTENT" jdbcType="VARCHAR" property="content" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    BLOG_ID, US_ID, SEND_TIME, UPVOTE_NO, COMMENT_NO, COLLECT_NO, DELETE_YN, FORWARDING, 
    CONTENT
  </sql>
  <select id="selectByExample" parameterType="model.BlogExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from blog
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="map" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from blog
    where BLOG_ID = #{blogId,jdbcType=VARCHAR}
      and US_ID = #{usId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="map">
    delete from blog
    where BLOG_ID = #{blogId,jdbcType=VARCHAR}
      and US_ID = #{usId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="model.BlogExample">
    delete from blog
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="model.Blog">
    insert into blog (BLOG_ID, US_ID, SEND_TIME, 
      UPVOTE_NO, COMMENT_NO, COLLECT_NO, 
      DELETE_YN, FORWARDING, CONTENT
      )
    values (#{blogId,jdbcType=VARCHAR}, #{usId,jdbcType=VARCHAR}, #{sendTime,jdbcType=TIMESTAMP}, 
      #{upvoteNo,jdbcType=INTEGER}, #{commentNo,jdbcType=INTEGER}, #{collectNo,jdbcType=INTEGER}, 
      #{deleteYn,jdbcType=VARCHAR}, #{forwarding,jdbcType=VARCHAR}, #{content,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="model.Blog">
    insert into blog
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="blogId != null">
        BLOG_ID,
      </if>
      <if test="usId != null">
        US_ID,
      </if>
      <if test="sendTime != null">
        SEND_TIME,
      </if>
      <if test="upvoteNo != null">
        UPVOTE_NO,
      </if>
      <if test="commentNo != null">
        COMMENT_NO,
      </if>
      <if test="collectNo != null">
        COLLECT_NO,
      </if>
      <if test="deleteYn != null">
        DELETE_YN,
      </if>
      <if test="forwarding != null">
        FORWARDING,
      </if>
      <if test="content != null">
        CONTENT,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="blogId != null">
        #{blogId,jdbcType=VARCHAR},
      </if>
      <if test="usId != null">
        #{usId,jdbcType=VARCHAR},
      </if>
      <if test="sendTime != null">
        #{sendTime,jdbcType=TIMESTAMP},
      </if>
      <if test="upvoteNo != null">
        #{upvoteNo,jdbcType=INTEGER},
      </if>
      <if test="commentNo != null">
        #{commentNo,jdbcType=INTEGER},
      </if>
      <if test="collectNo != null">
        #{collectNo,jdbcType=INTEGER},
      </if>
      <if test="deleteYn != null">
        #{deleteYn,jdbcType=VARCHAR},
      </if>
      <if test="forwarding != null">
        #{forwarding,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        #{content,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="model.BlogExample" resultType="java.lang.Integer">
    select count(*) from blog
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update blog
    <set>
      <if test="record.blogId != null">
        BLOG_ID = #{record.blogId,jdbcType=VARCHAR},
      </if>
      <if test="record.usId != null">
        US_ID = #{record.usId,jdbcType=VARCHAR},
      </if>
      <if test="record.sendTime != null">
        SEND_TIME = #{record.sendTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.upvoteNo != null">
        UPVOTE_NO = #{record.upvoteNo,jdbcType=INTEGER},
      </if>
      <if test="record.commentNo != null">
        COMMENT_NO = #{record.commentNo,jdbcType=INTEGER},
      </if>
      <if test="record.collectNo != null">
        COLLECT_NO = #{record.collectNo,jdbcType=INTEGER},
      </if>
      <if test="record.deleteYn != null">
        DELETE_YN = #{record.deleteYn,jdbcType=VARCHAR},
      </if>
      <if test="record.forwarding != null">
        FORWARDING = #{record.forwarding,jdbcType=VARCHAR},
      </if>
      <if test="record.content != null">
        CONTENT = #{record.content,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update blog
    set BLOG_ID = #{record.blogId,jdbcType=VARCHAR},
      US_ID = #{record.usId,jdbcType=VARCHAR},
      SEND_TIME = #{record.sendTime,jdbcType=TIMESTAMP},
      UPVOTE_NO = #{record.upvoteNo,jdbcType=INTEGER},
      COMMENT_NO = #{record.commentNo,jdbcType=INTEGER},
      COLLECT_NO = #{record.collectNo,jdbcType=INTEGER},
      DELETE_YN = #{record.deleteYn,jdbcType=VARCHAR},
      FORWARDING = #{record.forwarding,jdbcType=VARCHAR},
      CONTENT = #{record.content,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="model.Blog">
    update blog
    <set>
      <if test="sendTime != null">
        SEND_TIME = #{sendTime,jdbcType=TIMESTAMP},
      </if>
      <if test="upvoteNo != null">
        UPVOTE_NO = #{upvoteNo,jdbcType=INTEGER},
      </if>
      <if test="commentNo != null">
        COMMENT_NO = #{commentNo,jdbcType=INTEGER},
      </if>
      <if test="collectNo != null">
        COLLECT_NO = #{collectNo,jdbcType=INTEGER},
      </if>
      <if test="deleteYn != null">
        DELETE_YN = #{deleteYn,jdbcType=VARCHAR},
      </if>
      <if test="forwarding != null">
        FORWARDING = #{forwarding,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        CONTENT = #{content,jdbcType=VARCHAR},
      </if>
    </set>
    where BLOG_ID = #{blogId,jdbcType=VARCHAR}
      and US_ID = #{usId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="model.Blog">
    update blog
    set SEND_TIME = #{sendTime,jdbcType=TIMESTAMP},
      UPVOTE_NO = #{upvoteNo,jdbcType=INTEGER},
      COMMENT_NO = #{commentNo,jdbcType=INTEGER},
      COLLECT_NO = #{collectNo,jdbcType=INTEGER},
      DELETE_YN = #{deleteYn,jdbcType=VARCHAR},
      FORWARDING = #{forwarding,jdbcType=VARCHAR},
      CONTENT = #{content,jdbcType=VARCHAR}
    where BLOG_ID = #{blogId,jdbcType=VARCHAR}
      and US_ID = #{usId,jdbcType=VARCHAR}
  </update>
  <resultMap id="BaseResultMap" type="model.Blog">
    <id column="BLOG_ID" jdbcType="VARCHAR" property="blogId" />
    <id column="US_ID" jdbcType="VARCHAR" property="usId" />
    <result column="SEND_TIME" jdbcType="TIMESTAMP" property="sendTime" />
    <result column="UPVOTE_NO" jdbcType="INTEGER" property="upvoteNo" />
    <result column="COMMENT_NO" jdbcType="INTEGER" property="commentNo" />
    <result column="COLLECT_NO" jdbcType="INTEGER" property="collectNo" />
    <result column="DELETE_YN" jdbcType="VARCHAR" property="deleteYn" />
    <result column="FORWARDING" jdbcType="VARCHAR" property="forwarding" />
    <result column="CONTENT" jdbcType="VARCHAR" property="content" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    BLOG_ID, US_ID, SEND_TIME, UPVOTE_NO, COMMENT_NO, COLLECT_NO, DELETE_YN, FORWARDING, 
    CONTENT
  </sql>
  <select id="selectByExample" parameterType="model.BlogExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from blog
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="map" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from blog
    where BLOG_ID = #{blogId,jdbcType=VARCHAR}
      and US_ID = #{usId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="map">
    delete from blog
    where BLOG_ID = #{blogId,jdbcType=VARCHAR}
      and US_ID = #{usId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="model.BlogExample">
    delete from blog
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="model.Blog">
    insert into blog (BLOG_ID, US_ID, SEND_TIME, 
      UPVOTE_NO, COMMENT_NO, COLLECT_NO, 
      DELETE_YN, FORWARDING, CONTENT
      )
    values (#{blogId,jdbcType=VARCHAR}, #{usId,jdbcType=VARCHAR}, #{sendTime,jdbcType=TIMESTAMP}, 
      #{upvoteNo,jdbcType=INTEGER}, #{commentNo,jdbcType=INTEGER}, #{collectNo,jdbcType=INTEGER}, 
      #{deleteYn,jdbcType=VARCHAR}, #{forwarding,jdbcType=VARCHAR}, #{content,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="model.Blog">
    insert into blog
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="blogId != null">
        BLOG_ID,
      </if>
      <if test="usId != null">
        US_ID,
      </if>
      <if test="sendTime != null">
        SEND_TIME,
      </if>
      <if test="upvoteNo != null">
        UPVOTE_NO,
      </if>
      <if test="commentNo != null">
        COMMENT_NO,
      </if>
      <if test="collectNo != null">
        COLLECT_NO,
      </if>
      <if test="deleteYn != null">
        DELETE_YN,
      </if>
      <if test="forwarding != null">
        FORWARDING,
      </if>
      <if test="content != null">
        CONTENT,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="blogId != null">
        #{blogId,jdbcType=VARCHAR},
      </if>
      <if test="usId != null">
        #{usId,jdbcType=VARCHAR},
      </if>
      <if test="sendTime != null">
        #{sendTime,jdbcType=TIMESTAMP},
      </if>
      <if test="upvoteNo != null">
        #{upvoteNo,jdbcType=INTEGER},
      </if>
      <if test="commentNo != null">
        #{commentNo,jdbcType=INTEGER},
      </if>
      <if test="collectNo != null">
        #{collectNo,jdbcType=INTEGER},
      </if>
      <if test="deleteYn != null">
        #{deleteYn,jdbcType=VARCHAR},
      </if>
      <if test="forwarding != null">
        #{forwarding,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        #{content,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="model.BlogExample" resultType="java.lang.Integer">
    select count(*) from blog
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update blog
    <set>
      <if test="record.blogId != null">
        BLOG_ID = #{record.blogId,jdbcType=VARCHAR},
      </if>
      <if test="record.usId != null">
        US_ID = #{record.usId,jdbcType=VARCHAR},
      </if>
      <if test="record.sendTime != null">
        SEND_TIME = #{record.sendTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.upvoteNo != null">
        UPVOTE_NO = #{record.upvoteNo,jdbcType=INTEGER},
      </if>
      <if test="record.commentNo != null">
        COMMENT_NO = #{record.commentNo,jdbcType=INTEGER},
      </if>
      <if test="record.collectNo != null">
        COLLECT_NO = #{record.collectNo,jdbcType=INTEGER},
      </if>
      <if test="record.deleteYn != null">
        DELETE_YN = #{record.deleteYn,jdbcType=VARCHAR},
      </if>
      <if test="record.forwarding != null">
        FORWARDING = #{record.forwarding,jdbcType=VARCHAR},
      </if>
      <if test="record.content != null">
        CONTENT = #{record.content,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update blog
    set BLOG_ID = #{record.blogId,jdbcType=VARCHAR},
      US_ID = #{record.usId,jdbcType=VARCHAR},
      SEND_TIME = #{record.sendTime,jdbcType=TIMESTAMP},
      UPVOTE_NO = #{record.upvoteNo,jdbcType=INTEGER},
      COMMENT_NO = #{record.commentNo,jdbcType=INTEGER},
      COLLECT_NO = #{record.collectNo,jdbcType=INTEGER},
      DELETE_YN = #{record.deleteYn,jdbcType=VARCHAR},
      FORWARDING = #{record.forwarding,jdbcType=VARCHAR},
      CONTENT = #{record.content,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="model.Blog">
    update blog
    <set>
      <if test="sendTime != null">
        SEND_TIME = #{sendTime,jdbcType=TIMESTAMP},
      </if>
      <if test="upvoteNo != null">
        UPVOTE_NO = #{upvoteNo,jdbcType=INTEGER},
      </if>
      <if test="commentNo != null">
        COMMENT_NO = #{commentNo,jdbcType=INTEGER},
      </if>
      <if test="collectNo != null">
        COLLECT_NO = #{collectNo,jdbcType=INTEGER},
      </if>
      <if test="deleteYn != null">
        DELETE_YN = #{deleteYn,jdbcType=VARCHAR},
      </if>
      <if test="forwarding != null">
        FORWARDING = #{forwarding,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        CONTENT = #{content,jdbcType=VARCHAR},
      </if>
    </set>
    where BLOG_ID = #{blogId,jdbcType=VARCHAR}
      and US_ID = #{usId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="model.Blog">
    update blog
    set SEND_TIME = #{sendTime,jdbcType=TIMESTAMP},
      UPVOTE_NO = #{upvoteNo,jdbcType=INTEGER},
      COMMENT_NO = #{commentNo,jdbcType=INTEGER},
      COLLECT_NO = #{collectNo,jdbcType=INTEGER},
      DELETE_YN = #{deleteYn,jdbcType=VARCHAR},
      FORWARDING = #{forwarding,jdbcType=VARCHAR},
      CONTENT = #{content,jdbcType=VARCHAR}
    where BLOG_ID = #{blogId,jdbcType=VARCHAR}
      and US_ID = #{usId,jdbcType=VARCHAR}
  </update>
</mapper>