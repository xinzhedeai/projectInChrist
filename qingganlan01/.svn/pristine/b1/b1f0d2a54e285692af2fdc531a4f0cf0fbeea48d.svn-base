<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="normalMapper.BlogMapper" >
  <resultMap id="BaseResultMap" type="normalPo.Blog" >
    <id column="BLOG_ID" property="blogId" jdbcType="VARCHAR" />
    <result column="US_ID" property="usId" jdbcType="VARCHAR" />
    <result column="SEND_TIME" property="sendTime" jdbcType="TIMESTAMP" />
    <result column="BLOG_IMG" property="blogImg" jdbcType="VARCHAR" />
    <result column="UPVOTE_NO" property="upvoteNo" jdbcType="VARCHAR" />
    <result column="COMMENT_NO" property="commentNo" jdbcType="INTEGER" />
    <result column="COLLECT_NO" property="collectNo" jdbcType="INTEGER" />
    <result column="FORWARDING_NO" property="forwardingNo" jdbcType="INTEGER" />
    <result column="IS_DELETE" property="isDelete" jdbcType="VARCHAR" />
    <result column="IS_FORWARD" property="isForward" jdbcType="VARCHAR" />
    <result column="CONTENT" property="content" jdbcType="VARCHAR" />
    <result column="FORWARD_VALIABLE" property="forwardValiable" jdbcType="VARCHAR" />
    <result column="BLOG_STATE" property="blogState" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    BLOG_ID, US_ID, SEND_TIME, BLOG_IMG, UPVOTE_NO, COMMENT_NO, COLLECT_NO, FORWARDING_NO, 
    IS_DELETE, IS_FORWARD, CONTENT, FORWARD_VALIABLE, BLOG_STATE
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="normalPo.BlogExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from blog
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from blog
    where BLOG_ID = #{blogId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from blog
    where BLOG_ID = #{blogId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="normalPo.BlogExample" >
    delete from blog
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="normalPo.Blog" >
    insert into blog (BLOG_ID, US_ID, SEND_TIME, 
      BLOG_IMG, UPVOTE_NO, COMMENT_NO, 
      COLLECT_NO, FORWARDING_NO, IS_DELETE, 
      IS_FORWARD, CONTENT, FORWARD_VALIABLE, 
      BLOG_STATE)
    values (#{blogId,jdbcType=VARCHAR}, #{usId,jdbcType=VARCHAR}, #{sendTime,jdbcType=TIMESTAMP}, 
      #{blogImg,jdbcType=VARCHAR}, #{upvoteNo,jdbcType=VARCHAR}, #{commentNo,jdbcType=INTEGER}, 
      #{collectNo,jdbcType=INTEGER}, #{forwardingNo,jdbcType=INTEGER}, #{isDelete,jdbcType=VARCHAR}, 
      #{isForward,jdbcType=VARCHAR}, #{content,jdbcType=VARCHAR}, #{forwardValiable,jdbcType=VARCHAR}, 
      #{blogState,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="normalPo.Blog" >
    insert into blog
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="blogId != null" >
        BLOG_ID,
      </if>
      <if test="usId != null" >
        US_ID,
      </if>
      <if test="sendTime != null" >
        SEND_TIME,
      </if>
      <if test="blogImg != null" >
        BLOG_IMG,
      </if>
      <if test="upvoteNo != null" >
        UPVOTE_NO,
      </if>
      <if test="commentNo != null" >
        COMMENT_NO,
      </if>
      <if test="collectNo != null" >
        COLLECT_NO,
      </if>
      <if test="forwardingNo != null" >
        FORWARDING_NO,
      </if>
      <if test="isDelete != null" >
        IS_DELETE,
      </if>
      <if test="isForward != null" >
        IS_FORWARD,
      </if>
      <if test="content != null" >
        CONTENT,
      </if>
      <if test="forwardValiable != null" >
        FORWARD_VALIABLE,
      </if>
      <if test="blogState != null" >
        BLOG_STATE,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="blogId != null" >
        #{blogId,jdbcType=VARCHAR},
      </if>
      <if test="usId != null" >
        #{usId,jdbcType=VARCHAR},
      </if>
      <if test="sendTime != null" >
        #{sendTime,jdbcType=TIMESTAMP},
      </if>
      <if test="blogImg != null" >
        #{blogImg,jdbcType=VARCHAR},
      </if>
      <if test="upvoteNo != null" >
        #{upvoteNo,jdbcType=VARCHAR},
      </if>
      <if test="commentNo != null" >
        #{commentNo,jdbcType=INTEGER},
      </if>
      <if test="collectNo != null" >
        #{collectNo,jdbcType=INTEGER},
      </if>
      <if test="forwardingNo != null" >
        #{forwardingNo,jdbcType=INTEGER},
      </if>
      <if test="isDelete != null" >
        #{isDelete,jdbcType=VARCHAR},
      </if>
      <if test="isForward != null" >
        #{isForward,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="forwardValiable != null" >
        #{forwardValiable,jdbcType=VARCHAR},
      </if>
      <if test="blogState != null" >
        #{blogState,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="normalPo.BlogExample" resultType="java.lang.Integer" >
    select count(*) from blog
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update blog
    <set >
      <if test="record.blogId != null" >
        BLOG_ID = #{record.blogId,jdbcType=VARCHAR},
      </if>
      <if test="record.usId != null" >
        US_ID = #{record.usId,jdbcType=VARCHAR},
      </if>
      <if test="record.sendTime != null" >
        SEND_TIME = #{record.sendTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.blogImg != null" >
        BLOG_IMG = #{record.blogImg,jdbcType=VARCHAR},
      </if>
      <if test="record.upvoteNo != null" >
        UPVOTE_NO = #{record.upvoteNo,jdbcType=VARCHAR},
      </if>
      <if test="record.commentNo != null" >
        COMMENT_NO = #{record.commentNo,jdbcType=INTEGER},
      </if>
      <if test="record.collectNo != null" >
        COLLECT_NO = #{record.collectNo,jdbcType=INTEGER},
      </if>
      <if test="record.forwardingNo != null" >
        FORWARDING_NO = #{record.forwardingNo,jdbcType=INTEGER},
      </if>
      <if test="record.isDelete != null" >
        IS_DELETE = #{record.isDelete,jdbcType=VARCHAR},
      </if>
      <if test="record.isForward != null" >
        IS_FORWARD = #{record.isForward,jdbcType=VARCHAR},
      </if>
      <if test="record.content != null" >
        CONTENT = #{record.content,jdbcType=VARCHAR},
      </if>
      <if test="record.forwardValiable != null" >
        FORWARD_VALIABLE = #{record.forwardValiable,jdbcType=VARCHAR},
      </if>
      <if test="record.blogState != null" >
        BLOG_STATE = #{record.blogState,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update blog
    set BLOG_ID = #{record.blogId,jdbcType=VARCHAR},
      US_ID = #{record.usId,jdbcType=VARCHAR},
      SEND_TIME = #{record.sendTime,jdbcType=TIMESTAMP},
      BLOG_IMG = #{record.blogImg,jdbcType=VARCHAR},
      UPVOTE_NO = #{record.upvoteNo,jdbcType=VARCHAR},
      COMMENT_NO = #{record.commentNo,jdbcType=INTEGER},
      COLLECT_NO = #{record.collectNo,jdbcType=INTEGER},
      FORWARDING_NO = #{record.forwardingNo,jdbcType=INTEGER},
      IS_DELETE = #{record.isDelete,jdbcType=VARCHAR},
      IS_FORWARD = #{record.isForward,jdbcType=VARCHAR},
      CONTENT = #{record.content,jdbcType=VARCHAR},
      FORWARD_VALIABLE = #{record.forwardValiable,jdbcType=VARCHAR},
      BLOG_STATE = #{record.blogState,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="normalPo.Blog" >
    update blog
    <set >
      <if test="usId != null" >
        US_ID = #{usId,jdbcType=VARCHAR},
      </if>
      <if test="sendTime != null" >
        SEND_TIME = #{sendTime,jdbcType=TIMESTAMP},
      </if>
      <if test="blogImg != null" >
        BLOG_IMG = #{blogImg,jdbcType=VARCHAR},
      </if>
      <if test="upvoteNo != null" >
        UPVOTE_NO = #{upvoteNo,jdbcType=VARCHAR},
      </if>
      <if test="commentNo != null" >
        COMMENT_NO = #{commentNo,jdbcType=INTEGER},
      </if>
      <if test="collectNo != null" >
        COLLECT_NO = #{collectNo,jdbcType=INTEGER},
      </if>
      <if test="forwardingNo != null" >
        FORWARDING_NO = #{forwardingNo,jdbcType=INTEGER},
      </if>
      <if test="isDelete != null" >
        IS_DELETE = #{isDelete,jdbcType=VARCHAR},
      </if>
      <if test="isForward != null" >
        IS_FORWARD = #{isForward,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        CONTENT = #{content,jdbcType=VARCHAR},
      </if>
      <if test="forwardValiable != null" >
        FORWARD_VALIABLE = #{forwardValiable,jdbcType=VARCHAR},
      </if>
      <if test="blogState != null" >
        BLOG_STATE = #{blogState,jdbcType=VARCHAR},
      </if>
    </set>
    where BLOG_ID = #{blogId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="normalPo.Blog" >
    update blog
    set US_ID = #{usId,jdbcType=VARCHAR},
      SEND_TIME = #{sendTime,jdbcType=TIMESTAMP},
      BLOG_IMG = #{blogImg,jdbcType=VARCHAR},
      UPVOTE_NO = #{upvoteNo,jdbcType=VARCHAR},
      COMMENT_NO = #{commentNo,jdbcType=INTEGER},
      COLLECT_NO = #{collectNo,jdbcType=INTEGER},
      FORWARDING_NO = #{forwardingNo,jdbcType=INTEGER},
      IS_DELETE = #{isDelete,jdbcType=VARCHAR},
      IS_FORWARD = #{isForward,jdbcType=VARCHAR},
      CONTENT = #{content,jdbcType=VARCHAR},
      FORWARD_VALIABLE = #{forwardValiable,jdbcType=VARCHAR},
      BLOG_STATE = #{blogState,jdbcType=VARCHAR}
    where BLOG_ID = #{blogId,jdbcType=VARCHAR}
  </update>
</mapper>