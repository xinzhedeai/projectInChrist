<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mapper.LogMapper">
  <resultMap id="BaseResultMap" type="po.Log">
    <id column="LOG_ID" jdbcType="VARCHAR" property="logId" />
    <id column="US_ID" jdbcType="VARCHAR" property="usId" />
    <result column="LOG_CONTENT" jdbcType="VARCHAR" property="logContent" />
    <result column="SEND_DATE" jdbcType="TIMESTAMP" property="sendDate" />
    <result column="IS_DELETE" jdbcType="VARCHAR" property="isDelete" />
    <result column="IS_FORWARD" jdbcType="VARCHAR" property="isForward" />
    <result column="LOG_STATE" jdbcType="VARCHAR" property="logState" />
    <result column="LOG_UPDATE_DATE" jdbcType="TIMESTAMP" property="logUpdateDate" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    LOG_ID, US_ID, LOG_CONTENT, SEND_DATE, IS_DELETE, IS_FORWARD, LOG_STATE, LOG_UPDATE_DATE
  </sql>
  <select id="selectByExample" parameterType="po.LogExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="map" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from log
    where LOG_ID = #{logId,jdbcType=VARCHAR}
      and US_ID = #{usId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="map">
    delete from log
    where LOG_ID = #{logId,jdbcType=VARCHAR}
      and US_ID = #{usId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="po.LogExample">
    delete from log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="po.Log">
    insert into log (LOG_ID, US_ID, LOG_CONTENT, 
      SEND_DATE, IS_DELETE, IS_FORWARD, 
      LOG_STATE, LOG_UPDATE_DATE)
    values (#{logId,jdbcType=VARCHAR}, #{usId,jdbcType=VARCHAR}, #{logContent,jdbcType=VARCHAR}, 
      #{sendDate,jdbcType=TIMESTAMP}, #{isDelete,jdbcType=VARCHAR}, #{isForward,jdbcType=VARCHAR}, 
      #{logState,jdbcType=VARCHAR}, #{logUpdateDate,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="po.Log">
    insert into log
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="logId != null">
        LOG_ID,
      </if>
      <if test="usId != null">
        US_ID,
      </if>
      <if test="logContent != null">
        LOG_CONTENT,
      </if>
      <if test="sendDate != null">
        SEND_DATE,
      </if>
      <if test="isDelete != null">
        IS_DELETE,
      </if>
      <if test="isForward != null">
        IS_FORWARD,
      </if>
      <if test="logState != null">
        LOG_STATE,
      </if>
      <if test="logUpdateDate != null">
        LOG_UPDATE_DATE,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="logId != null">
        #{logId,jdbcType=VARCHAR},
      </if>
      <if test="usId != null">
        #{usId,jdbcType=VARCHAR},
      </if>
      <if test="logContent != null">
        #{logContent,jdbcType=VARCHAR},
      </if>
      <if test="sendDate != null">
        #{sendDate,jdbcType=TIMESTAMP},
      </if>
      <if test="isDelete != null">
        #{isDelete,jdbcType=VARCHAR},
      </if>
      <if test="isForward != null">
        #{isForward,jdbcType=VARCHAR},
      </if>
      <if test="logState != null">
        #{logState,jdbcType=VARCHAR},
      </if>
      <if test="logUpdateDate != null">
        #{logUpdateDate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="po.LogExample" resultType="java.lang.Integer">
    select count(*) from log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update log
    <set>
      <if test="record.logId != null">
        LOG_ID = #{record.logId,jdbcType=VARCHAR},
      </if>
      <if test="record.usId != null">
        US_ID = #{record.usId,jdbcType=VARCHAR},
      </if>
      <if test="record.logContent != null">
        LOG_CONTENT = #{record.logContent,jdbcType=VARCHAR},
      </if>
      <if test="record.sendDate != null">
        SEND_DATE = #{record.sendDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.isDelete != null">
        IS_DELETE = #{record.isDelete,jdbcType=VARCHAR},
      </if>
      <if test="record.isForward != null">
        IS_FORWARD = #{record.isForward,jdbcType=VARCHAR},
      </if>
      <if test="record.logState != null">
        LOG_STATE = #{record.logState,jdbcType=VARCHAR},
      </if>
      <if test="record.logUpdateDate != null">
        LOG_UPDATE_DATE = #{record.logUpdateDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update log
    set LOG_ID = #{record.logId,jdbcType=VARCHAR},
      US_ID = #{record.usId,jdbcType=VARCHAR},
      LOG_CONTENT = #{record.logContent,jdbcType=VARCHAR},
      SEND_DATE = #{record.sendDate,jdbcType=TIMESTAMP},
      IS_DELETE = #{record.isDelete,jdbcType=VARCHAR},
      IS_FORWARD = #{record.isForward,jdbcType=VARCHAR},
      LOG_STATE = #{record.logState,jdbcType=VARCHAR},
      LOG_UPDATE_DATE = #{record.logUpdateDate,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="po.Log">
    update log
    <set>
      <if test="logContent != null">
        LOG_CONTENT = #{logContent,jdbcType=VARCHAR},
      </if>
      <if test="sendDate != null">
        SEND_DATE = #{sendDate,jdbcType=TIMESTAMP},
      </if>
      <if test="isDelete != null">
        IS_DELETE = #{isDelete,jdbcType=VARCHAR},
      </if>
      <if test="isForward != null">
        IS_FORWARD = #{isForward,jdbcType=VARCHAR},
      </if>
      <if test="logState != null">
        LOG_STATE = #{logState,jdbcType=VARCHAR},
      </if>
      <if test="logUpdateDate != null">
        LOG_UPDATE_DATE = #{logUpdateDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where LOG_ID = #{logId,jdbcType=VARCHAR}
      and US_ID = #{usId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="po.Log">
    update log
    set LOG_CONTENT = #{logContent,jdbcType=VARCHAR},
      SEND_DATE = #{sendDate,jdbcType=TIMESTAMP},
      IS_DELETE = #{isDelete,jdbcType=VARCHAR},
      IS_FORWARD = #{isForward,jdbcType=VARCHAR},
      LOG_STATE = #{logState,jdbcType=VARCHAR},
      LOG_UPDATE_DATE = #{logUpdateDate,jdbcType=TIMESTAMP}
    where LOG_ID = #{logId,jdbcType=VARCHAR}
      and US_ID = #{usId,jdbcType=VARCHAR}
  </update>
  <resultMap id="BaseResultMap" type="po.Log">
    <id column="LOG_ID" jdbcType="VARCHAR" property="logId" />
    <id column="US_ID" jdbcType="VARCHAR" property="usId" />
    <result column="LOG_CONTENT" jdbcType="VARCHAR" property="logContent" />
    <result column="SEND_DATE" jdbcType="TIMESTAMP" property="sendDate" />
    <result column="IS_DELETE" jdbcType="VARCHAR" property="isDelete" />
    <result column="IS_FORWARD" jdbcType="VARCHAR" property="isForward" />
    <result column="LOG_STATE" jdbcType="VARCHAR" property="logState" />
    <result column="LOG_UPDATE_DATE" jdbcType="TIMESTAMP" property="logUpdateDate" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    LOG_ID, US_ID, LOG_CONTENT, SEND_DATE, IS_DELETE, IS_FORWARD, LOG_STATE, LOG_UPDATE_DATE
  </sql>
  <select id="selectByExample" parameterType="po.LogExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="map" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from log
    where LOG_ID = #{logId,jdbcType=VARCHAR}
      and US_ID = #{usId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="map">
    delete from log
    where LOG_ID = #{logId,jdbcType=VARCHAR}
      and US_ID = #{usId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="po.LogExample">
    delete from log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="po.Log">
    insert into log (LOG_ID, US_ID, LOG_CONTENT, 
      SEND_DATE, IS_DELETE, IS_FORWARD, 
      LOG_STATE, LOG_UPDATE_DATE)
    values (#{logId,jdbcType=VARCHAR}, #{usId,jdbcType=VARCHAR}, #{logContent,jdbcType=VARCHAR}, 
      #{sendDate,jdbcType=TIMESTAMP}, #{isDelete,jdbcType=VARCHAR}, #{isForward,jdbcType=VARCHAR}, 
      #{logState,jdbcType=VARCHAR}, #{logUpdateDate,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="po.Log">
    insert into log
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="logId != null">
        LOG_ID,
      </if>
      <if test="usId != null">
        US_ID,
      </if>
      <if test="logContent != null">
        LOG_CONTENT,
      </if>
      <if test="sendDate != null">
        SEND_DATE,
      </if>
      <if test="isDelete != null">
        IS_DELETE,
      </if>
      <if test="isForward != null">
        IS_FORWARD,
      </if>
      <if test="logState != null">
        LOG_STATE,
      </if>
      <if test="logUpdateDate != null">
        LOG_UPDATE_DATE,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="logId != null">
        #{logId,jdbcType=VARCHAR},
      </if>
      <if test="usId != null">
        #{usId,jdbcType=VARCHAR},
      </if>
      <if test="logContent != null">
        #{logContent,jdbcType=VARCHAR},
      </if>
      <if test="sendDate != null">
        #{sendDate,jdbcType=TIMESTAMP},
      </if>
      <if test="isDelete != null">
        #{isDelete,jdbcType=VARCHAR},
      </if>
      <if test="isForward != null">
        #{isForward,jdbcType=VARCHAR},
      </if>
      <if test="logState != null">
        #{logState,jdbcType=VARCHAR},
      </if>
      <if test="logUpdateDate != null">
        #{logUpdateDate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="po.LogExample" resultType="java.lang.Integer">
    select count(*) from log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update log
    <set>
      <if test="record.logId != null">
        LOG_ID = #{record.logId,jdbcType=VARCHAR},
      </if>
      <if test="record.usId != null">
        US_ID = #{record.usId,jdbcType=VARCHAR},
      </if>
      <if test="record.logContent != null">
        LOG_CONTENT = #{record.logContent,jdbcType=VARCHAR},
      </if>
      <if test="record.sendDate != null">
        SEND_DATE = #{record.sendDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.isDelete != null">
        IS_DELETE = #{record.isDelete,jdbcType=VARCHAR},
      </if>
      <if test="record.isForward != null">
        IS_FORWARD = #{record.isForward,jdbcType=VARCHAR},
      </if>
      <if test="record.logState != null">
        LOG_STATE = #{record.logState,jdbcType=VARCHAR},
      </if>
      <if test="record.logUpdateDate != null">
        LOG_UPDATE_DATE = #{record.logUpdateDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update log
    set LOG_ID = #{record.logId,jdbcType=VARCHAR},
      US_ID = #{record.usId,jdbcType=VARCHAR},
      LOG_CONTENT = #{record.logContent,jdbcType=VARCHAR},
      SEND_DATE = #{record.sendDate,jdbcType=TIMESTAMP},
      IS_DELETE = #{record.isDelete,jdbcType=VARCHAR},
      IS_FORWARD = #{record.isForward,jdbcType=VARCHAR},
      LOG_STATE = #{record.logState,jdbcType=VARCHAR},
      LOG_UPDATE_DATE = #{record.logUpdateDate,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="po.Log">
    update log
    <set>
      <if test="logContent != null">
        LOG_CONTENT = #{logContent,jdbcType=VARCHAR},
      </if>
      <if test="sendDate != null">
        SEND_DATE = #{sendDate,jdbcType=TIMESTAMP},
      </if>
      <if test="isDelete != null">
        IS_DELETE = #{isDelete,jdbcType=VARCHAR},
      </if>
      <if test="isForward != null">
        IS_FORWARD = #{isForward,jdbcType=VARCHAR},
      </if>
      <if test="logState != null">
        LOG_STATE = #{logState,jdbcType=VARCHAR},
      </if>
      <if test="logUpdateDate != null">
        LOG_UPDATE_DATE = #{logUpdateDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where LOG_ID = #{logId,jdbcType=VARCHAR}
      and US_ID = #{usId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="po.Log">
    update log
    set LOG_CONTENT = #{logContent,jdbcType=VARCHAR},
      SEND_DATE = #{sendDate,jdbcType=TIMESTAMP},
      IS_DELETE = #{isDelete,jdbcType=VARCHAR},
      IS_FORWARD = #{isForward,jdbcType=VARCHAR},
      LOG_STATE = #{logState,jdbcType=VARCHAR},
      LOG_UPDATE_DATE = #{logUpdateDate,jdbcType=TIMESTAMP}
    where LOG_ID = #{logId,jdbcType=VARCHAR}
      and US_ID = #{usId,jdbcType=VARCHAR}
  </update>
  <resultMap id="BaseResultMap" type="model.Log">
    <id column="LOG_ID" jdbcType="VARCHAR" property="logId" />
    <id column="US_ID" jdbcType="VARCHAR" property="usId" />
    <result column="LOG_CONTENT" jdbcType="VARCHAR" property="logContent" />
    <result column="SEND_DATE" jdbcType="TIMESTAMP" property="sendDate" />
    <result column="IS_DELETE" jdbcType="VARCHAR" property="isDelete" />
    <result column="IS_FORWARD" jdbcType="VARCHAR" property="isForward" />
    <result column="LOG_STATE" jdbcType="VARCHAR" property="logState" />
    <result column="LOG_UPDATE_DATE" jdbcType="TIMESTAMP" property="logUpdateDate" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    LOG_ID, US_ID, LOG_CONTENT, SEND_DATE, IS_DELETE, IS_FORWARD, LOG_STATE, LOG_UPDATE_DATE
  </sql>
  <select id="selectByExample" parameterType="model.LogExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="map" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from log
    where LOG_ID = #{logId,jdbcType=VARCHAR}
      and US_ID = #{usId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="map">
    delete from log
    where LOG_ID = #{logId,jdbcType=VARCHAR}
      and US_ID = #{usId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="model.LogExample">
    delete from log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="model.Log">
    insert into log (LOG_ID, US_ID, LOG_CONTENT, 
      SEND_DATE, IS_DELETE, IS_FORWARD, 
      LOG_STATE, LOG_UPDATE_DATE)
    values (#{logId,jdbcType=VARCHAR}, #{usId,jdbcType=VARCHAR}, #{logContent,jdbcType=VARCHAR}, 
      #{sendDate,jdbcType=TIMESTAMP}, #{isDelete,jdbcType=VARCHAR}, #{isForward,jdbcType=VARCHAR}, 
      #{logState,jdbcType=VARCHAR}, #{logUpdateDate,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="model.Log">
    insert into log
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="logId != null">
        LOG_ID,
      </if>
      <if test="usId != null">
        US_ID,
      </if>
      <if test="logContent != null">
        LOG_CONTENT,
      </if>
      <if test="sendDate != null">
        SEND_DATE,
      </if>
      <if test="isDelete != null">
        IS_DELETE,
      </if>
      <if test="isForward != null">
        IS_FORWARD,
      </if>
      <if test="logState != null">
        LOG_STATE,
      </if>
      <if test="logUpdateDate != null">
        LOG_UPDATE_DATE,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="logId != null">
        #{logId,jdbcType=VARCHAR},
      </if>
      <if test="usId != null">
        #{usId,jdbcType=VARCHAR},
      </if>
      <if test="logContent != null">
        #{logContent,jdbcType=VARCHAR},
      </if>
      <if test="sendDate != null">
        #{sendDate,jdbcType=TIMESTAMP},
      </if>
      <if test="isDelete != null">
        #{isDelete,jdbcType=VARCHAR},
      </if>
      <if test="isForward != null">
        #{isForward,jdbcType=VARCHAR},
      </if>
      <if test="logState != null">
        #{logState,jdbcType=VARCHAR},
      </if>
      <if test="logUpdateDate != null">
        #{logUpdateDate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="model.LogExample" resultType="java.lang.Integer">
    select count(*) from log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update log
    <set>
      <if test="record.logId != null">
        LOG_ID = #{record.logId,jdbcType=VARCHAR},
      </if>
      <if test="record.usId != null">
        US_ID = #{record.usId,jdbcType=VARCHAR},
      </if>
      <if test="record.logContent != null">
        LOG_CONTENT = #{record.logContent,jdbcType=VARCHAR},
      </if>
      <if test="record.sendDate != null">
        SEND_DATE = #{record.sendDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.isDelete != null">
        IS_DELETE = #{record.isDelete,jdbcType=VARCHAR},
      </if>
      <if test="record.isForward != null">
        IS_FORWARD = #{record.isForward,jdbcType=VARCHAR},
      </if>
      <if test="record.logState != null">
        LOG_STATE = #{record.logState,jdbcType=VARCHAR},
      </if>
      <if test="record.logUpdateDate != null">
        LOG_UPDATE_DATE = #{record.logUpdateDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update log
    set LOG_ID = #{record.logId,jdbcType=VARCHAR},
      US_ID = #{record.usId,jdbcType=VARCHAR},
      LOG_CONTENT = #{record.logContent,jdbcType=VARCHAR},
      SEND_DATE = #{record.sendDate,jdbcType=TIMESTAMP},
      IS_DELETE = #{record.isDelete,jdbcType=VARCHAR},
      IS_FORWARD = #{record.isForward,jdbcType=VARCHAR},
      LOG_STATE = #{record.logState,jdbcType=VARCHAR},
      LOG_UPDATE_DATE = #{record.logUpdateDate,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="model.Log">
    update log
    <set>
      <if test="logContent != null">
        LOG_CONTENT = #{logContent,jdbcType=VARCHAR},
      </if>
      <if test="sendDate != null">
        SEND_DATE = #{sendDate,jdbcType=TIMESTAMP},
      </if>
      <if test="isDelete != null">
        IS_DELETE = #{isDelete,jdbcType=VARCHAR},
      </if>
      <if test="isForward != null">
        IS_FORWARD = #{isForward,jdbcType=VARCHAR},
      </if>
      <if test="logState != null">
        LOG_STATE = #{logState,jdbcType=VARCHAR},
      </if>
      <if test="logUpdateDate != null">
        LOG_UPDATE_DATE = #{logUpdateDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where LOG_ID = #{logId,jdbcType=VARCHAR}
      and US_ID = #{usId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="model.Log">
    update log
    set LOG_CONTENT = #{logContent,jdbcType=VARCHAR},
      SEND_DATE = #{sendDate,jdbcType=TIMESTAMP},
      IS_DELETE = #{isDelete,jdbcType=VARCHAR},
      IS_FORWARD = #{isForward,jdbcType=VARCHAR},
      LOG_STATE = #{logState,jdbcType=VARCHAR},
      LOG_UPDATE_DATE = #{logUpdateDate,jdbcType=TIMESTAMP}
    where LOG_ID = #{logId,jdbcType=VARCHAR}
      and US_ID = #{usId,jdbcType=VARCHAR}
  </update>
  <resultMap id="BaseResultMap" type="model.Log">
    <id column="LOG_ID" jdbcType="VARCHAR" property="logId" />
    <id column="US_ID" jdbcType="VARCHAR" property="usId" />
    <result column="LOG_CONTENT" jdbcType="VARCHAR" property="logContent" />
    <result column="SEND_DATE" jdbcType="TIMESTAMP" property="sendDate" />
    <result column="IS_DELETE" jdbcType="VARCHAR" property="isDelete" />
    <result column="IS_FORWARD" jdbcType="VARCHAR" property="isForward" />
    <result column="LOG_STATE" jdbcType="VARCHAR" property="logState" />
    <result column="LOG_UPDATE_DATE" jdbcType="TIMESTAMP" property="logUpdateDate" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    LOG_ID, US_ID, LOG_CONTENT, SEND_DATE, IS_DELETE, IS_FORWARD, LOG_STATE, LOG_UPDATE_DATE
  </sql>
  <select id="selectByExample" parameterType="model.LogExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="map" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from log
    where LOG_ID = #{logId,jdbcType=VARCHAR}
      and US_ID = #{usId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="map">
    delete from log
    where LOG_ID = #{logId,jdbcType=VARCHAR}
      and US_ID = #{usId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="model.LogExample">
    delete from log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="model.Log">
    insert into log (LOG_ID, US_ID, LOG_CONTENT, 
      SEND_DATE, IS_DELETE, IS_FORWARD, 
      LOG_STATE, LOG_UPDATE_DATE)
    values (#{logId,jdbcType=VARCHAR}, #{usId,jdbcType=VARCHAR}, #{logContent,jdbcType=VARCHAR}, 
      #{sendDate,jdbcType=TIMESTAMP}, #{isDelete,jdbcType=VARCHAR}, #{isForward,jdbcType=VARCHAR}, 
      #{logState,jdbcType=VARCHAR}, #{logUpdateDate,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="model.Log">
    insert into log
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="logId != null">
        LOG_ID,
      </if>
      <if test="usId != null">
        US_ID,
      </if>
      <if test="logContent != null">
        LOG_CONTENT,
      </if>
      <if test="sendDate != null">
        SEND_DATE,
      </if>
      <if test="isDelete != null">
        IS_DELETE,
      </if>
      <if test="isForward != null">
        IS_FORWARD,
      </if>
      <if test="logState != null">
        LOG_STATE,
      </if>
      <if test="logUpdateDate != null">
        LOG_UPDATE_DATE,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="logId != null">
        #{logId,jdbcType=VARCHAR},
      </if>
      <if test="usId != null">
        #{usId,jdbcType=VARCHAR},
      </if>
      <if test="logContent != null">
        #{logContent,jdbcType=VARCHAR},
      </if>
      <if test="sendDate != null">
        #{sendDate,jdbcType=TIMESTAMP},
      </if>
      <if test="isDelete != null">
        #{isDelete,jdbcType=VARCHAR},
      </if>
      <if test="isForward != null">
        #{isForward,jdbcType=VARCHAR},
      </if>
      <if test="logState != null">
        #{logState,jdbcType=VARCHAR},
      </if>
      <if test="logUpdateDate != null">
        #{logUpdateDate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="model.LogExample" resultType="java.lang.Integer">
    select count(*) from log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update log
    <set>
      <if test="record.logId != null">
        LOG_ID = #{record.logId,jdbcType=VARCHAR},
      </if>
      <if test="record.usId != null">
        US_ID = #{record.usId,jdbcType=VARCHAR},
      </if>
      <if test="record.logContent != null">
        LOG_CONTENT = #{record.logContent,jdbcType=VARCHAR},
      </if>
      <if test="record.sendDate != null">
        SEND_DATE = #{record.sendDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.isDelete != null">
        IS_DELETE = #{record.isDelete,jdbcType=VARCHAR},
      </if>
      <if test="record.isForward != null">
        IS_FORWARD = #{record.isForward,jdbcType=VARCHAR},
      </if>
      <if test="record.logState != null">
        LOG_STATE = #{record.logState,jdbcType=VARCHAR},
      </if>
      <if test="record.logUpdateDate != null">
        LOG_UPDATE_DATE = #{record.logUpdateDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update log
    set LOG_ID = #{record.logId,jdbcType=VARCHAR},
      US_ID = #{record.usId,jdbcType=VARCHAR},
      LOG_CONTENT = #{record.logContent,jdbcType=VARCHAR},
      SEND_DATE = #{record.sendDate,jdbcType=TIMESTAMP},
      IS_DELETE = #{record.isDelete,jdbcType=VARCHAR},
      IS_FORWARD = #{record.isForward,jdbcType=VARCHAR},
      LOG_STATE = #{record.logState,jdbcType=VARCHAR},
      LOG_UPDATE_DATE = #{record.logUpdateDate,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="model.Log">
    update log
    <set>
      <if test="logContent != null">
        LOG_CONTENT = #{logContent,jdbcType=VARCHAR},
      </if>
      <if test="sendDate != null">
        SEND_DATE = #{sendDate,jdbcType=TIMESTAMP},
      </if>
      <if test="isDelete != null">
        IS_DELETE = #{isDelete,jdbcType=VARCHAR},
      </if>
      <if test="isForward != null">
        IS_FORWARD = #{isForward,jdbcType=VARCHAR},
      </if>
      <if test="logState != null">
        LOG_STATE = #{logState,jdbcType=VARCHAR},
      </if>
      <if test="logUpdateDate != null">
        LOG_UPDATE_DATE = #{logUpdateDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where LOG_ID = #{logId,jdbcType=VARCHAR}
      and US_ID = #{usId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="model.Log">
    update log
    set LOG_CONTENT = #{logContent,jdbcType=VARCHAR},
      SEND_DATE = #{sendDate,jdbcType=TIMESTAMP},
      IS_DELETE = #{isDelete,jdbcType=VARCHAR},
      IS_FORWARD = #{isForward,jdbcType=VARCHAR},
      LOG_STATE = #{logState,jdbcType=VARCHAR},
      LOG_UPDATE_DATE = #{logUpdateDate,jdbcType=TIMESTAMP}
    where LOG_ID = #{logId,jdbcType=VARCHAR}
      and US_ID = #{usId,jdbcType=VARCHAR}
  </update>
</mapper>